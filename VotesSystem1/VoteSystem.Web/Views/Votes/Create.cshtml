@model VoteSystem.Data.Models.VoteModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create new vote</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div id="name" class="form-group">
            @Html.LabelFor(model => model.Vote.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Vote.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="desc" class="form-group">
            @Html.LabelFor(model => model.Vote.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Vote.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="private" class="form-group">           
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Vote.IsPrivate)
                    @Html.ValidationMessageFor(model => model.IsPrivate, "", new { @class = "text-danger" })
                    @Html.LabelFor(model => model.Vote.IsPrivate, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
            </div>
        </div>

        <div id="email" class="form-group">
            @Html.LabelFor(model => model.Vote.EmailRecipient, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailRecipient, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Vote.EmailRecipient, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="finish" class="form-group">
            @Html.LabelFor(model => model.Vote.DateFinish, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateFinish, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Vote.DateFinish, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="cats"class="form-group">            
             @Html.LabelFor(model => model.Vote.Category, htmlAttributes: new { @class = "control-label col-md-2" })         
             <div class="col-md-10">
                @Html.DropDownListFor(model=> model.CategoryID, new SelectList(Model.Categories, "ID", "Name"))
                @Html.ValidationMessageFor(model => model.Vote.Category, "", new { @class = "text-danger" })

            </div>
        </div>

        <div id="options" class="form-group">
            @Html.LabelFor(model => model.Vote.Questions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @for (int i = 0; i <= 3; i++)
                {
                   @(i+1)<span>.</span>
                    @Html.EditorFor(model => model.Questions[i].Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Questions[i].Name, "", new { @class = "text-danger" })
                   
                    <br/>
                }

            </div>
        </div>

        <div id ="btn" class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
