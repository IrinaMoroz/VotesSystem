@model VoteSystem.Data.Models.VoteModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Vote</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Vote.ID)

        <div id ="Name" class="form-group">
            @Html.LabelFor(model => model.Vote.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Vote.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="Question" class="form-group">
            @Html.LabelFor(model => model.Vote.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Vote.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id ="private" class="form-group">
            @Html.LabelFor(model => model.Vote.IsPrivate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsPrivate)
                    @Html.ValidationMessageFor(model => model.Vote.IsPrivate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id ="email" class="form-group">
            @Html.LabelFor(model => model.Vote.EmailRecipient, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailRecipient, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Vote.EmailRecipient, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="finish" class="form-group">
            @Html.LabelFor(model => model.Vote.DateFinish, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateFinish, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Vote.DateFinish, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id ="category" class="form-group">
            @Html.LabelFor(model => model.Vote.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryID, new SelectList(Model.Categories, "ID", "Name"))
                @Html.ValidationMessageFor(model => model.Vote.Category, "", new { @class = "text-danger" })

            </div>
        </div>

        <div id="options" class="form-group">
            @Html.LabelFor(model => model.Vote.Questions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @for (int i = 0; i < Model.Questions.Count; i++)
                {
                    @(i + 1)<span>.</span>
                    @Html.HiddenFor(model => model.Questions[i].ID)
                    @Html.EditorFor(model => model.Questions[i].Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Questions[i].Name, "", new { @class = "text-danger" })
                    @Html.ActionLink("Delete", "../Questions/Delete", new { id = Model.Questions[i].ID })
                    <br />
                }
            </div>
        </div>
        

        <div id="btn" class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
